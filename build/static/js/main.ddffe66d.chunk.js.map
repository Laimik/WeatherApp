{"version":3,"sources":["apiKey.js","App.js","index.js"],"names":["module","exports","API_KEY","URL","apiCreds","key","apiKey","baseUrl","App","useState","location","setLocation","weather","setWeather","className","main","temp","type","placeholder","onChange","event","target","value","onKeyPress","fetch","then","res","json","result","console","log","name","sys","country","elem","date","String","slice","dateCreate","Date","Math","round","humidity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,CACbC,QAAS,mCACTC,IAAK,6C,iKCCHC,EAAW,CACfC,IAAKC,IAAOJ,QACZK,QAASD,IAAOH,KAsEHK,MAnEf,WACE,IADa,EAOiBC,mBAAS,IAP1B,mBAORC,EAPQ,KAOEC,EAPF,OAQeF,mBAAS,IARxB,mBAQRG,EARQ,KAQCC,EARD,KAqBf,OACE,yBACAC,UACyB,oBAAhBF,EAAQG,KACbH,EAAQG,KAAKC,KAAO,GACpB,YACA,aACA,SAIF,8BACE,yBAAKF,UAAU,kBACb,2BACAG,KAAK,OACLC,YAAY,0BACZJ,UAAU,WACVK,SAAU,SAACC,GAAD,OAAWT,EAAYS,EAAMC,OAAOC,QAC9CA,MAAOZ,EACPa,WA/BK,SAACH,GACM,UAAdA,EAAMf,KACRmB,MAAM,GAAD,OAAIpB,EAASG,QAAb,qBAAiCG,EAAjC,+BAAgEN,EAASC,MAC7EoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjB,EAAY,IACZE,EAAWe,GACXC,QAAQC,IAAIF,UA2BY,oBAAhBhB,EAAQG,KACd,6BACE,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,SACZF,EAAQmB,KADX,KACmBnB,EAAQoB,IAAIC,SAE/B,yBAAKnB,UAAU,QAAf,IAhDS,SAACoB,GAClB,IAAIC,EAAOC,OAAOF,GAElB,OADAC,EAAOA,EAAKE,MAAM,EAAE,IA8CYC,CAAW,IAAIC,QAEzC,yBAAKzB,UAAU,qBACb,yBAAKA,UAAU,QACZ0B,KAAKC,MAAM7B,EAAQG,KAAKC,MAD3B,SAGA,yBAAKF,UAAU,WAAWF,EAAQA,QAAQ,GAAGG,MAC7C,yBAAKD,UAAU,WAAf,cAAqCF,EAAQG,KAAK2B,SAAlD,OAIJ,MC9DRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ddffe66d.chunk.js","sourcesContent":["module.exports = {\r\n    API_KEY: '213a3789495e8af9664bcdf9381abf0e',\r\n    URL: 'https://api.openweathermap.org/data/2.5/',\r\n}","import React, { useState} from 'react'\nimport apiKey from './apiKey'\n\nconst apiCreds = {\n  key: apiKey.API_KEY,\n  baseUrl: apiKey.URL,\n}\n\nfunction App() {\n  const dateCreate = (elem) => {\n    let date = String(elem);\n    date = date.slice(3,15);\n    return date\n  }\n\nconst [location, setLocation] = useState('');\nconst [weather, setWeather] = useState({});\nconst find = (event) => {\n  if (event.key === 'Enter') {\n    fetch(`${apiCreds.baseUrl}weather?q=${location}&units=metric&APPID=${apiCreds.key}`)\n    .then((res) => res.json())\n    .then((result) => {\n      setLocation('');\n      setWeather(result);\n      console.log(result); \n    }); \n  }\n};\n\nreturn ( \n  <div\n  className={\n    typeof weather.main != 'undefined'\n    ? weather.main.temp > 21\n    ? 'Theme hot'\n    : 'Theme cold'\n    : 'Theme'\n  }  \n  >\n\n    <main> \n      <div className='find-container'>\n        <input\n        type='text'\n        placeholder='Insert the city name...'\n        className='find-bar'\n        onChange={(event) => setLocation(event.target.value)}\n        value={location}\n        onKeyPress={find}    \n        />\n      </div>\n      {typeof weather.main != 'undefined' ? (\n        <div>\n          <div className='place-container'>\n            <div className='place'>\n              {weather.name}, {weather.sys.country}\n            </div>\n            <div className='date'> {dateCreate(new Date())}</div>        \n          </div>\n          <div className='weather-container'>\n            <div className='temp'>\n              {Math.round(weather.main.temp)}Â°C\n            </div>\n            <div className='weather'>{weather.weather[0].main}</div>\n            <div className='weather'>Humidity - {weather.main.humidity}%</div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </main>\n  </div>\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}